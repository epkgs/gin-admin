{
    "swagger": "2.0",
    "info": {
        "description": "基于 Gin 的快速启动项目",
        "title": "Gin Admin",
        "contact": {},
        "version": "v1.0.0"
    },
    "paths": {
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "AuthAPI"
                ],
                "summary": "Login system with username and password",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-dtos_LoginToken"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "AuthAPI"
                ],
                "summary": "Logout system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/menus": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "AuthAPI"
                ],
                "summary": "Query current user menus based on the current user role",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-models_Menus"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/password": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "AuthAPI"
                ],
                "summary": "Change current user password",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.AuthUpdatePasswordReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/refresh-token": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "AuthAPI"
                ],
                "summary": "Refresh current access token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-dtos_LoginToken"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/user": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "AuthAPI"
                ],
                "summary": "Get current user info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-models_User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "AuthAPI"
                ],
                "summary": "Update current user info",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.AuthUpdateUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    }
                }
            }
        },
        "/api/v1/captcha/id": {
            "get": {
                "tags": [
                    "CaptchaAPI"
                ],
                "summary": "Get captcha ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-dtos_Captcha"
                        }
                    }
                }
            }
        },
        "/api/v1/captcha/image": {
            "get": {
                "produces": [
                    "image/png"
                ],
                "tags": [
                    "CaptchaAPI"
                ],
                "summary": "Response captcha image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Captcha ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Reload captcha image (reload=1)",
                        "name": "reload",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Captcha image"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    }
                }
            }
        },
        "/api/v1/loggers": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "LoggerAPI"
                ],
                "summary": "Query logger list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "end time",
                        "name": "endTime",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "log level",
                        "name": "level",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pagination size, less than 0 is considered as unlimited quantity. default(20)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "log message",
                        "name": "message",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pagination index. default(1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "start time",
                        "name": "startTime",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "log tag",
                        "name": "tag",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "total number of items",
                        "name": "total",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "trace ID",
                        "name": "traceID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "user name",
                        "name": "username",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.ResultList-models_Logger"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    }
                }
            }
        },
        "/api/v1/menus": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "MenuAPI"
                ],
                "summary": "Query menu tree data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "-",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pagination size, less than 0 is considered as unlimited quantity. default(20)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Display name of menu",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pagination index. default(1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status of menu (disabled, enabled)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "total number of items",
                        "name": "total",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Type of menu (catalog, menu, button)",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Include resources",
                        "name": "withResources",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.ResultList-models_Menu"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "MenuAPI"
                ],
                "summary": "Create menu record",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.MenuCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-models_Menu"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    }
                }
            }
        },
        "/api/v1/menus/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "MenuAPI"
                ],
                "summary": "Get menu record by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-models_Menu"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "MenuAPI"
                ],
                "summary": "Update menu record by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.MenuUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "MenuAPI"
                ],
                "summary": "Delete menu record by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    }
                }
            }
        },
        "/api/v1/roles": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "RoleAPI"
                ],
                "summary": "Query role list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "pagination size, less than 0 is considered as unlimited quantity. default(20)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Display name of role",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pagination index. default(1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "disabled",
                            "enabled",
                            ""
                        ],
                        "type": "string",
                        "description": "Status of role (disabled, enabled",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "total number of items",
                        "name": "total",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Include menu IDs",
                        "name": "withMenus",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.ResultList-models_Role"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "RoleAPI"
                ],
                "summary": "Create role record",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.RoleCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-models_Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    }
                }
            }
        },
        "/api/v1/roles/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "RoleAPI"
                ],
                "summary": "Get role record by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-models_Role"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "RoleAPI"
                ],
                "summary": "Update role record by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.RoleUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "RoleAPI"
                ],
                "summary": "Delete role record by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "UserAPI"
                ],
                "summary": "Query user list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "pagination size, less than 0 is considered as unlimited quantity. default(20)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Name of user",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pagination index. default(1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "activated",
                            "freezed"
                        ],
                        "type": "string",
                        "description": "Status of user (activated, freezed)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "total number of items",
                        "name": "total",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Username for login",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Whether to include role IDs",
                        "name": "withRoles",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.ResultList-models_User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "UserAPI"
                ],
                "summary": "Create user record",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UserCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-models_User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "UserAPI"
                ],
                "summary": "Get user record by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-models_User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "UserAPI"
                ],
                "summary": "Update user record by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UserUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "UserAPI"
                ],
                "summary": "Delete user record by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{id}/reset-pwd": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "UserAPI"
                ],
                "summary": "Reset user password by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.Result-any"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.AuthUpdatePasswordReq": {
            "type": "object",
            "required": [
                "newPassword",
                "oldPassword"
            ],
            "properties": {
                "newPassword": {
                    "description": "New password (md5 hash)",
                    "type": "string"
                },
                "oldPassword": {
                    "description": "Old password (md5 hash)",
                    "type": "string"
                }
            }
        },
        "dtos.AuthUpdateUserReq": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Email of user",
                    "type": "string",
                    "maxLength": 128
                },
                "name": {
                    "description": "Name of user",
                    "type": "string",
                    "maxLength": 64
                },
                "phone": {
                    "description": "Phone number of user",
                    "type": "string",
                    "maxLength": 32
                },
                "remark": {
                    "description": "Remark of user",
                    "type": "string",
                    "maxLength": 1024
                },
                "wechat": {
                    "description": "Wechat account",
                    "type": "string",
                    "maxLength": 64
                }
            }
        },
        "dtos.Captcha": {
            "type": "object",
            "properties": {
                "captchaId": {
                    "description": "Captcha ID",
                    "type": "string"
                }
            }
        },
        "dtos.List-models_Logger": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Logger"
                    }
                },
                "limit": {
                    "description": "pagination size, less than 0 is considered as unlimited quantity. default(20)",
                    "type": "integer"
                },
                "page": {
                    "description": "pagination index. default(1)",
                    "type": "integer"
                },
                "total": {
                    "description": "total number of items",
                    "type": "integer"
                }
            }
        },
        "dtos.List-models_Menu": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Menu"
                    }
                },
                "limit": {
                    "description": "pagination size, less than 0 is considered as unlimited quantity. default(20)",
                    "type": "integer"
                },
                "page": {
                    "description": "pagination index. default(1)",
                    "type": "integer"
                },
                "total": {
                    "description": "total number of items",
                    "type": "integer"
                }
            }
        },
        "dtos.List-models_Role": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Role"
                    }
                },
                "limit": {
                    "description": "pagination size, less than 0 is considered as unlimited quantity. default(20)",
                    "type": "integer"
                },
                "page": {
                    "description": "pagination index. default(1)",
                    "type": "integer"
                },
                "total": {
                    "description": "total number of items",
                    "type": "integer"
                }
            }
        },
        "dtos.List-models_User": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                },
                "limit": {
                    "description": "pagination size, less than 0 is considered as unlimited quantity. default(20)",
                    "type": "integer"
                },
                "page": {
                    "description": "pagination index. default(1)",
                    "type": "integer"
                },
                "total": {
                    "description": "total number of items",
                    "type": "integer"
                }
            }
        },
        "dtos.Login": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "description": "Login password (md5 hash)",
                    "type": "string"
                },
                "username": {
                    "description": "Login name",
                    "type": "string"
                }
            }
        },
        "dtos.LoginToken": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "description": "Access token (JWT)",
                    "type": "string"
                },
                "expires": {
                    "description": "Expired time (second)s",
                    "type": "integer"
                },
                "refreshToken": {
                    "description": "Refresh token (JWT)",
                    "type": "string"
                },
                "tokenType": {
                    "description": "Token type (Usage: Authorization=${token_type} ${access_token})",
                    "type": "string"
                }
            }
        },
        "dtos.MenuCreateReq": {
            "type": "object",
            "required": [
                "status",
                "type"
            ],
            "properties": {
                "component": {
                    "description": "Component path of view",
                    "type": "string"
                },
                "meta": {
                    "description": "Meta of menu (JSON)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.MenuMeta"
                        }
                    ]
                },
                "method": {
                    "description": "Http method of resource",
                    "type": "string"
                },
                "name": {
                    "description": "Display name of menu",
                    "type": "string",
                    "maxLength": 128
                },
                "parentId": {
                    "description": "Parent ID (From Menu.ID)",
                    "type": "string"
                },
                "path": {
                    "description": "Access path of menu",
                    "type": "string"
                },
                "status": {
                    "description": "Status of menu (enabled, disabled)",
                    "type": "string",
                    "enum": [
                        "disabled",
                        "enabled"
                    ]
                },
                "type": {
                    "description": "Type of menu (catalog menu, button)",
                    "type": "string",
                    "enum": [
                        "catalog",
                        "menu",
                        "button"
                    ]
                }
            }
        },
        "dtos.MenuUpdateReq": {
            "type": "object",
            "properties": {
                "component": {
                    "description": "Component path of view",
                    "type": "string"
                },
                "meta": {
                    "description": "Meta of menu (JSON)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.MenuMeta"
                        }
                    ]
                },
                "method": {
                    "description": "Http method of resource",
                    "type": "string"
                },
                "name": {
                    "description": "Display name of menu",
                    "type": "string",
                    "maxLength": 128
                },
                "parentId": {
                    "description": "Parent ID (From Menu.ID)",
                    "type": "string"
                },
                "path": {
                    "description": "Access path of menu",
                    "type": "string"
                },
                "status": {
                    "description": "Status of menu (enabled, disabled)",
                    "type": "string",
                    "enum": [
                        "disabled",
                        "enabled"
                    ]
                },
                "type": {
                    "description": "Type of menu (catalog menu, button)",
                    "type": "string",
                    "enum": [
                        "catalog",
                        "menu",
                        "button"
                    ]
                }
            }
        },
        "dtos.Result-any": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "dtos.Result-dtos_Captcha": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/dtos.Captcha"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dtos.Result-dtos_LoginToken": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/dtos.LoginToken"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dtos.Result-models_Menu": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/models.Menu"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dtos.Result-models_Menus": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Menu"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dtos.Result-models_Role": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/models.Role"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dtos.Result-models_User": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/models.User"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dtos.ResultList-models_Logger": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/dtos.List-models_Logger"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dtos.ResultList-models_Menu": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/dtos.List-models_Menu"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dtos.ResultList-models_Role": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/dtos.List-models_Role"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dtos.ResultList-models_User": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/dtos.List-models_User"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dtos.RoleCreateReq": {
            "type": "object",
            "required": [
                "code",
                "name",
                "status"
            ],
            "properties": {
                "code": {
                    "description": "Code of role (unique)",
                    "type": "string",
                    "maxLength": 32
                },
                "description": {
                    "description": "Details about role",
                    "type": "string"
                },
                "menuIds": {
                    "description": "Menu ids",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Display name of role",
                    "type": "string",
                    "maxLength": 128
                },
                "rank": {
                    "description": "Rank for sorting",
                    "type": "integer"
                },
                "status": {
                    "description": "Status of role (enabled, disabled)",
                    "type": "string",
                    "enum": [
                        "disabled",
                        "enabled"
                    ]
                }
            }
        },
        "dtos.RoleUpdateReq": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code of role (unique)",
                    "type": "string",
                    "maxLength": 32
                },
                "description": {
                    "description": "Details about role",
                    "type": "string"
                },
                "menuIds": {
                    "description": "Menu ids",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Display name of role",
                    "type": "string",
                    "maxLength": 128
                },
                "rank": {
                    "description": "Rank for sorting",
                    "type": "integer"
                },
                "status": {
                    "description": "Status of role (enabled, disabled)",
                    "type": "string",
                    "enum": [
                        "disabled",
                        "enabled"
                    ]
                }
            }
        },
        "dtos.UserCreateReq": {
            "type": "object",
            "required": [
                "nickName",
                "roles",
                "status",
                "username"
            ],
            "properties": {
                "description": {
                    "description": "Description of user",
                    "type": "string",
                    "maxLength": 1024
                },
                "email": {
                    "description": "Email of user",
                    "type": "string",
                    "maxLength": 128
                },
                "nickName": {
                    "description": "Name of user",
                    "type": "string",
                    "maxLength": 64
                },
                "password": {
                    "description": "Password for login (md5 hash)",
                    "type": "string",
                    "maxLength": 64
                },
                "phone": {
                    "description": "Phone number of user",
                    "type": "string",
                    "maxLength": 32
                },
                "realName": {
                    "description": "Real name of user",
                    "type": "string",
                    "maxLength": 64
                },
                "roles": {
                    "description": "Roles of user",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "description": "Status of user (activated, freezed)",
                    "type": "string",
                    "enum": [
                        "activated",
                        "freezed"
                    ]
                },
                "username": {
                    "description": "Username for login",
                    "type": "string",
                    "maxLength": 64
                },
                "wechat": {
                    "description": "Wechat account",
                    "type": "string",
                    "maxLength": 64
                }
            }
        },
        "dtos.UserUpdateReq": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description of user",
                    "type": "string",
                    "maxLength": 1024
                },
                "email": {
                    "description": "Email of user",
                    "type": "string",
                    "maxLength": 128
                },
                "nickName": {
                    "description": "Name of user",
                    "type": "string",
                    "maxLength": 64
                },
                "password": {
                    "description": "Password for login (md5 hash)",
                    "type": "string",
                    "maxLength": 64
                },
                "phone": {
                    "description": "Phone number of user",
                    "type": "string",
                    "maxLength": 32
                },
                "realName": {
                    "description": "Real name of user",
                    "type": "string",
                    "maxLength": 64
                },
                "roles": {
                    "description": "Roles of user",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "description": "Status of user (activated, freezed)",
                    "type": "string",
                    "enum": [
                        "activated",
                        "freezed"
                    ]
                },
                "username": {
                    "description": "Username for login",
                    "type": "string",
                    "maxLength": 64
                },
                "wechat": {
                    "description": "Wechat account",
                    "type": "string",
                    "maxLength": 64
                }
            }
        },
        "models.Logger": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "Create time",
                    "type": "string"
                },
                "id": {
                    "description": "Unique ID",
                    "type": "string"
                },
                "level": {
                    "description": "Log level",
                    "type": "string"
                },
                "message": {
                    "description": "Log message",
                    "type": "string"
                },
                "meta": {
                    "description": "Log data",
                    "type": "object",
                    "additionalProperties": {}
                },
                "nickName": {
                    "description": "From User.NickName",
                    "type": "string"
                },
                "stack": {
                    "description": "Error stack",
                    "type": "string"
                },
                "tag": {
                    "description": "Log tag",
                    "type": "string"
                },
                "traceId": {
                    "description": "Trace ID",
                    "type": "string"
                },
                "userId": {
                    "description": "User ID",
                    "type": "string"
                },
                "username": {
                    "description": "From User.Name",
                    "type": "string"
                }
            }
        },
        "models.Menu": {
            "type": "object",
            "properties": {
                "children": {
                    "description": "Child menus",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Menus"
                        }
                    ]
                },
                "component": {
                    "description": "Component path of view",
                    "type": "string"
                },
                "createdAt": {
                    "description": "Create time",
                    "type": "string"
                },
                "id": {
                    "description": "Unique ID",
                    "type": "string"
                },
                "meta": {
                    "description": "Meta of menu",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.MenuMeta"
                        }
                    ]
                },
                "method": {
                    "description": "Http method of resource",
                    "type": "string"
                },
                "name": {
                    "description": "Display name of menu",
                    "type": "string"
                },
                "parentId": {
                    "description": "Parent ID (From Menu.ID)",
                    "type": "string"
                },
                "parentPath": {
                    "description": "Parent path (split by .)",
                    "type": "string"
                },
                "path": {
                    "description": "Access path of menu",
                    "type": "string"
                },
                "redirect": {
                    "description": "Redirect path of menu",
                    "type": "string"
                },
                "roles": {
                    "$ref": "#/definitions/models.Roles"
                },
                "status": {
                    "description": "Status of menu (enabled, disabled)",
                    "type": "string"
                },
                "type": {
                    "description": "Type of menu (catalog, menu, button)",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "Update time",
                    "type": "string"
                }
            }
        },
        "models.MenuMeta": {
            "type": "object",
            "properties": {
                "order": {
                    "description": "Rank for sorting (Order by desc)",
                    "type": "integer"
                },
                "title": {
                    "description": "Menu title",
                    "type": "string"
                }
            }
        },
        "models.Menus": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/models.Menu"
            }
        },
        "models.Role": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code of role (unique)",
                    "type": "string"
                },
                "createdAt": {
                    "description": "Create time",
                    "type": "string"
                },
                "description": {
                    "description": "Details about role",
                    "type": "string"
                },
                "id": {
                    "description": "Unique ID",
                    "type": "string"
                },
                "menus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Menu"
                    }
                },
                "name": {
                    "description": "Display name of role",
                    "type": "string"
                },
                "rank": {
                    "description": "Rank for sorting",
                    "type": "integer"
                },
                "status": {
                    "description": "Status of role (disabled, enabled)",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "Update time",
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                }
            }
        },
        "models.Roles": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/models.Role"
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "avatar": {
                    "description": "Avatar URL",
                    "type": "string"
                },
                "createdAt": {
                    "description": "Create time",
                    "type": "string"
                },
                "description": {
                    "description": "Details about user",
                    "type": "string"
                },
                "email": {
                    "description": "Email of user",
                    "type": "string"
                },
                "id": {
                    "description": "Unique ID",
                    "type": "string"
                },
                "nickName": {
                    "description": "Name of user",
                    "type": "string"
                },
                "phone": {
                    "description": "Phone number of user",
                    "type": "string"
                },
                "realName": {
                    "description": "Real name of user",
                    "type": "string"
                },
                "roles": {
                    "description": "Roles of user",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Role"
                    }
                },
                "status": {
                    "description": "Status of user (activated, freezed)",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "Update time",
                    "type": "string"
                },
                "username": {
                    "description": "Username for login",
                    "type": "string"
                },
                "wechat": {
                    "description": "Wechat account",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}